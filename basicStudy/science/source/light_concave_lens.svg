<?xml version="1.0" encoding="utf-8"?>
<svg id="concave-lens" viewBox="-500 -250 1000 500" xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink" style="cursor:none">
  <clipPath id="total-size">
    <rect width="1000" height="500" />
  </clipPath>
  <defs>
    <marker id="marker01" markerWidth="7" markerHeight="6" viewBox="-6 -3 6 6" orient="auto">
      <path d="M-6-2L0 0-6 2" style="stroke:#000; fill:none" />
    </marker>
    <marker id="marker02" markerWidth="7" markerHeight="6" viewBox="-6 -3 6 6" orient="auto">
      <path d="M-6-2L0 0-6 2" style="stroke:#866; fill:none" />
    </marker>
  </defs>
  <path
    d="M-500 10H500M-500 20H500M-500 30H500M-500 40H500M-500 50H500M-500 60H500M-500 70H500M-500 80H500M-500 90H500M-500 100H500M-500 110H500M-500 120H500M-500 130H500M-500 140H500M-500 150H500M-500 160H500M-500 170H500M-500 180H500M-500 190H500M-500 200H500M-500 210H500M-500 220H500M-500 230H500M-500 240H500M-500 250H500
    M-500-10H500M-500-20H500M-500-30H500M-500-40H500M-500-50H500M-500-60H500M-500-70H500M-500-80H500M-500-90H500M-500-100H500M-500-110H500M-500-120H500M-500-130H500M-500-140H500M-500-150H500M-500-160H500M-500-170H500M-500-180H500M-500-190H500M-500-200H500M-500-210H500M-500-220H500M-500-230H500M-500-240H500M-500-250H500    

    M-10-250V250M-20-250V250M-30-250V250M-40-250V250M-50-250V250M-60-250V250M-70-250V250M-80-250V250M-90-250V250M-100-250V250M-110-250V250M-120-250V250M-130-250V250M-140-250V250M-150-250V250M-160-250V250M-170-250V250M-180-250V250M-190-250V250M-200-250V250M-210-250V250M-220-250V250M-230-250V250M-240-250V250M-250-250V250M-260-250V250M-270-250V250M-280-250V250M-290-250V250M-300-250V250M-310-250V250M-320-250V250M-330-250V250M-340-250V250M-350-250V250M-360-250V250M-370-250V250M-380-250V250M-390-250V250M-400-250V250M-410-250V250M-420-250V250M-430-250V250M-440-250V250M-450-250V250M-460-250V250M-470-250V250M-480-250V250M-490-250V250M-500-250V250"
    style="fill:none; stroke:#eef; stroke-width:0.5" />
  <path d="M-500 0H500" style="fill:none; stroke:black;" />

  <!-- 볼록렌즈(초점 : 240) -->
  <path d="M50-250q-90 250 0 500h-100q90-250 0-500z" style="fill:#eee7; stroke:#bbb" />

  <!-- 가이드라인 -->
  <g style="stroke-width:3">
    <path id="lv_guideTop" d="M-500-150H0L160-250 " style="fill:none; stroke:#fdd" />
    <path id="lv_guideTop2" d="M-640 250L0-150 " style="fill:none; stroke:#fdd; stroke-dasharray:5 2;" />
    <path id="lv_guideDown" d="M-500 -250L500 250 " style="fill:none; stroke:#ddf" />
  </g>

  <!-- 커서 -->
  <g style="stroke-width:3">
    <path id="lv_origin" d="M-300 0V-150" marker-end="url(#marker01)" style="fill:none; stroke:#000;" />
    <path id="lv_dest" d="M-133 0V-67 " marker-end="url(#marker02)" style="fill:none; stroke:#866;" />
  </g>

  <!-- 초점 -->
  <ellipse id="lv_pF" cx="240" cy="0" rx="2" ry="2" style="fill:#000" />
  <ellipse id="lv_pFn" cx="-240" cy="0" rx="2" ry="2" style="fill:#000" />

  <!-- 원점 -->
  <ellipse id="lv_pO" cx="0" cy="0" rx="2" ry="2" style="fill:#000" />

  <text id="lv_pA" x="5" y="-145">A(0,-150)</text>
  <text id="lv_pS" x="-300" y="-155" style="text-anchor:middle">S(-300, -150)</text>
  <text id="lv_pD" x="-133" y="20" style="text-anchor:middle">x0.44</text>
  <text x="2" y="16">O(0, 0)</text>
  <text x="252" y="16">f(0, 240)</text>

  <script>
    var lv_svg = document.getElementById("concave-lens");
    var lv_pS = {ctx:document.getElementById('lv_pS'), x:0, y:0, text:""};
    var lv_pD = {ctx:document.getElementById('lv_pD'), x:0, y:0, text:"", d:"", dest:document.getElementById('lv_dest')};
    var lv_pA = {ctx:document.getElementById('lv_pA'), x:0, y:0, text:""};
    var lv_f = {x:240, y:0};
    var lv_o = {x:500, y:250};
    var lv_view = {x1:-500, y1:-250, x2:500, y2:250};
    var lv_e ={clientX: 200, clientY: 100}

    lv_svg.addEventListener("mousemove", e => {lv_draw(e)});
    lv_draw(lv_e);

    function lv_draw(e) {
      lv_pS.x = Math.round(e.clientX - lv_svg.getClientRects()[0].x) - lv_o.x;
      lv_pS.y = Math.round(e.clientY - lv_svg.getClientRects()[0].y) - lv_o.y;
      if(lv_pS.y==0||lv_pS.x==0)
        return;

      // 기본 화살표
      document.getElementById('lv_origin').setAttribute('d', `M${lv_pS.x} 0V${lv_pS.y}`);

      // 변수 초기화
      lv_pA.x = 0;
      lv_pA.y = lv_pS.y;
      lv_pA.text = `A(${lv_pA.x.toFixed(0)},${lv_pA.y})`;

      lv_pA.ctx.setAttribute('x', lv_pA.x + 5);
      lv_pA.ctx.setAttribute('y', lv_pA.y + 5);
      lv_pA.ctx.textContent = lv_pA.text;

      lv_pS.ctx.setAttribute('x', lv_pS.x);
      lv_pS.ctx.setAttribute('y', (lv_pS.y>0)?lv_pS.y+12:lv_pS.y-10);
      lv_pS.text = `S(${lv_pS.x},${lv_pS.y})`;
      lv_pS.ctx.textContent = lv_pS.text;

      // top가이드라인 그리기(빨)
      TopS = -(lv_f.x-lv_pA.x)/lv_pS.y*lv_o.y - lv_f.x;
      TopE = (lv_f.x-lv_pA.x)/lv_pS.y*lv_o.y - lv_f.x;
      if(lv_pS.y>0){
        document.getElementById('lv_guideTop').setAttribute('d', `M${lv_view.x1} ${lv_pS.y}H0L${TopE} ${lv_view.y2}`);
        document.getElementById('lv_guideTop2').setAttribute('d', `M${TopS} ${lv_view.y1}L0 ${lv_pA.y}`);
      }else{
        document.getElementById('lv_guideTop').setAttribute('d', `M${lv_view.x1} ${lv_pS.y}H0L${TopS} ${lv_view.y1}`);
        document.getElementById('lv_guideTop2').setAttribute('d', `M${TopE} ${lv_view.y2}L0 ${lv_pA.y}`);
      }

      // down가이드라인 그리기(파랑)
      DownS = (-lv_pS.x)/lv_pS.y*lv_o.y;
      DownE = -(-lv_pS.x)/lv_pS.y*lv_o.y;
      document.getElementById('lv_guideDown').setAttribute('d', `M${DownS} ${lv_view.y1}L${DownE} ${lv_view.y2}`);

      // 교차점 구하기
      retXY = findIntersection(TopS, lv_view.y1, TopE, lv_view.y2, DownS, lv_view.y1, DownE, lv_view.y2);
      if(retXY==null) return;

      if(lv_view.x1>retXY.x)
        lv_pD.d = `M${lv_view.x1+50} ${(retXY.y>0)?20:-20}h-30`;
      else if(retXY.x>lv_view.x2)
        lv_pD.d = `M${lv_view.x2-50} ${(retXY.y>0)?20:-20}h30`;
      else
        lv_pD.d = `M${retXY.x} 0V${retXY.y}`;
      lv_pD.dest.setAttribute('d', lv_pD.d);
      
      lv_pD.x = lv_view.x1>retXY.x?(lv_view.x1+30):(retXY.x>lv_view.x2?(lv_view.x2-30):retXY.x);
      lv_pD.y = retXY.y>0?-5:15;
      lv_pD.text = `x${Math.abs(retXY.y / lv_pS.y).toFixed(2)}`;
      lv_pD.ctx.setAttribute('x', lv_pD.x);
      lv_pD.ctx.setAttribute('y', lv_pD.y);
      lv_pD.ctx.textContent = lv_pD.text;
    }
        
    function findIntersection(a_x, a_y, b_x, b_y, c_x, c_y, d_x, d_y) {
      // 첫 번째 직선의 기울기를 계산합니다.
      var slope1 = (b_y - a_y) / (b_x - a_x);
      // 두 번째 직선의 기울기를 계산합니다.
      var slope2 = (d_y - c_y) / (d_x - c_x);

      // 두 직선이 평행인 경우, 교차 지점은 존재하지 않습니다.
      if (slope1 === slope2) {
        return null;
      }

      // 두 직선의 교차점의 x 좌표를 계산합니다.
      var x = ((c_y - a_y) + (slope1 * a_x) - (slope2 * c_x)) / (slope1 - slope2);
      // 교차점의 y 좌표를 계산합니다.
      var y = slope1 * (x - a_x) + a_y;

      return { x: x, y: y };
    }
  </script>
</svg>